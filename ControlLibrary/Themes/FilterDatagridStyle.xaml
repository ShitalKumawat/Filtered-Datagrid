<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="ControlLibrary.Datagrid.ExtendedDatagridEventHandler"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:local="clr-namespace:ControlLibrary.ListViewControl"
                    xmlns:datagridColumn="clr-namespace:ControlLibrary.DatagridColumns"
                    xmlns:ExtendedGridControl="clr-namespace:ControlLibrary.Datagrid"
                    >
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
    
    <Style TargetType="{x:Type DataGridCell}">
       <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DynamicCurrentRowBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
       </Style.Triggers>
    </Style>

    <Style  TargetType="ExtendedGridControl:ExtendedDatagridControl">
        <Setter Property="SelectionMode" Value="Extended"></Setter>
        <Setter Property="RowBackground" Value="{DynamicResource DynamicRowBackgroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource DynamicDefaultControlBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DynamicDefaultControlForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DynamicDefaultControlBorderBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DynamicGridLineColorBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DynamicGridLineColorBrush}" />
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DynamicAlternateRowBackgroundBrush}" />
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <DockPanel>
                        <Border
						        Background="{TemplateBinding Background}"
						        BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        SnapsToDevicePixels="True"
						        Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <!--Left Column Header Corner -->
                                            <Button Background="{DynamicResource DynamicHeaderBackgroundBrush}"
                                                    Command="{x:Static DataGrid.SelectAllCommand}" 
                                                    Focusable="false" 
                                                    Style="{x:Null}" 
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                             >
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Border BorderThickness="1" BorderBrush="{DynamicResource DynamicHeaderBorderBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="{DynamicResource DynamicHeaderBackgroundBrush}">
                                                            </Rectangle>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>


                                            <!--Column Headers-->
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                            <!--DataGrid content-->
                                            <DockPanel Grid.ColumnSpan="2" Grid.Row="1" VerticalAlignment="Top"  LastChildFill="True" >
                                               <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            </DockPanel>
                                            
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource DynamicHeaderBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DynamicHeaderBorderBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="ContextMenu" Value="{DynamicResource DataGridHeaderColumnChooser}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid >

                        <themes:DataGridHeaderBorder x:Name="headerBorder"
                                HorizontalAlignment="Stretch"
							    SortDirection="{TemplateBinding SortDirection}"
							    IsHovered="{TemplateBinding IsMouseOver}"
							    IsPressed="{TemplateBinding IsPressed}"
							    IsClickable="{TemplateBinding CanUserSort}"
							    Background="{TemplateBinding Background}"
							    BorderBrush="{TemplateBinding BorderBrush}"
							    BorderThickness="{TemplateBinding BorderThickness}"
							    Padding ="{TemplateBinding Padding}"
							    SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
							    SeparatorBrush="{TemplateBinding SeparatorBrush}"
                            >
                            <Border BorderThickness="0,1,0,0">

                                <DockPanel LastChildFill="True" >

                                    <Popup x:Name="popupColumnFilter" StaysOpen="True" IsHitTestVisible="True"  
                                           Placement="RelativePoint"  AllowsTransparency="False" 
                                           IsOpen="False" 
                                           Width="150" Tag="False">
                                        <StackPanel Focusable="True" Background="{DynamicResource DynamicAlternateRowBackgroundBrush}">
                                            <local:FilterView Focusable="True"  x:Name="ColumnValuesList"  BorderThickness="2"/>
                                        </StackPanel>
                                        
                                    </Popup>

                                    <ContentControl x:Name="FilterContentControl"
                                                    Focusable="True" 
                                                    Margin="0,0,2,0" 
                                                    DockPanel.Dock="Right" 
                                                    VerticalAlignment="Center"
                                                    BorderBrush="Transparent" 
                                                    BorderThickness="0" 
                                                    MouseDown="AutoFilterMouseDown"
                                                    Visibility="Collapsed"
                                               >

                                        <DockPanel Width="15" Height="15" Background="{DynamicResource DynamicFilterContentControlBackgroundBrush}" >

                                           <Path Name="NotFilterIconControl" 
                                                  Data="M0,0 L8,0 4,4Z" 
                                                  Fill="{DynamicResource AutoFilterBrush}" 
                                                  Stroke="{DynamicResource AutoFilterDarkBrush}" 
                                                  VerticalAlignment="Center" 
                                                  HorizontalAlignment="Center"
                                                 >
                                            </Path>

                                        </DockPanel>

                                    </ContentControl>

                                    <TextBlock 
                                        x:Name="headerText"
                                        DockPanel.Dock="Left"
									    Text="{Binding}" Margin="4,0,4,0"
                                        Foreground="{DynamicResource DynamicDarkDefaultControlForegroundBrush}"
									    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

                                </DockPanel>
                            </Border>
                        </themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper"
							   HorizontalAlignment="Left"
							   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
							   HorizontalAlignment="Right"
							   Style="{StaticResource ColumnHeaderGripperStyle}"/>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.AllowFilter}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter  Property="Visibility" TargetName="FilterContentControl" Value="Visible"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.AllowFilter}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsFiltered}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter  Property="Data" TargetName="NotFilterIconControl" Value="M0,0 L6,0 L3,3 L3,4 L3,3 0,0Z"/>
                       </MultiDataTrigger>
                       
                      <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="ColumnValuesList" Property="UIElement.IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="popupColumnFilter" Property="IsOpen" Value="False"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                      
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="headerBorder" Property="Background" Value="{DynamicResource DynamicHeaderPressedBackgroundBrush}" />
                            <Setter TargetName="headerText" Property="Foreground" Value="{DynamicResource DynamicHeaderPressedForegroundBrush}" />
                        </Trigger>
                     

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height"  Value="9" />
        <Setter Property="Background"   Value="Transparent" />
        <Setter Property="Cursor"   Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"  Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        
                        <Border x:Name="rowHeaderBorder" Width="10" 
                                Background="{DynamicResource DynamicHeaderBackgroundBrush}"
                                BorderBrush="{DynamicResource DynamicGridLineColorBrush}"
                                BorderThickness="1,0,1,1">
                            
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control SnapsToDevicePixels="false"    
                                         Template="{Binding ValidationErrorTemplate, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                                    Visibility="{Binding (Validation.HasError), 
                                                    Converter={StaticResource bool2VisibilityConverter}, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />  
                            </StackPanel>
                        </Border>

                        <Thumb  x:Name="PART_TopHeaderGripper"
                                Style="{StaticResource RowHeaderGripperStyle}"
                                VerticalAlignment="Top" />   
                        <Thumb  x:Name="PART_BottomHeaderGripper"
                                Style="{StaticResource RowHeaderGripperStyle}"
                                VerticalAlignment="Bottom" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rowHeaderBorder" Property="Background" Value="{DynamicResource DynamicHeaderPressedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="DataGridHeaderColumnChooser" StaysOpen="True" HorizontalContentAlignment="Stretch" Width="Auto" HorizontalAlignment="Stretch">
      <MenuItem StaysOpenOnClick="True" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
            <MenuItem.Header>
                <datagridColumn:DatagridColumnHeaderMenu></datagridColumn:DatagridColumnHeaderMenu>
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>
    
</ResourceDictionary>